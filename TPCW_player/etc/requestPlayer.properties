# RequestPlayer properties file
# Author: Pierre Louis Aublin <pierre-louis.aublin@inria.fr>
# Sardes team - INRIA Rhône-Alpes - France
# August 2010


# File where to read requests from
requests_file = traces/reqPattern1/small_traces/h2_ordering.log

# request pattern version
# 0 => HH:MM:SS,mmm method_name browsing_session_id interaction_id transaction_id statement arguments
# 1 => HH:MM:SS,mmm method_name browsing_session_id interaction_id SHOPPING_ID transaction_id statement arguments
# 2 => HH:MM:SS,mmm execTime(ns) method_name browsing_session_id interaction_id SHOPPING_ID transaction_id statement arguments
request_pattern_version = 1

# Server address
server_addr = localhost

# Server port
server_port = 4242

# Number of client threads
nbClients = 8

# Size of the pool of server threads (request_player.remote only)
poolSize = 8

# degree of parallelism
# 0 => all parallel
# 1 => sequential writes, parallel reads
# 2 => sequential writes, parallel reads, if the next transaction is a W and there is already
# a writer then do not wait until it has finished but get a read request
# 3 => use advanced rules. Not implemented yet
degreeOfParallelism = 1

# delay in minutes between 2 outputs of the
# monitor thread 
monitorDelay = 1

# Do we process the result of the requests, like in TPCW?
requests_processing = true

# number of EBs (TPCW Emulated Browsers)
NUM_EBS = 50

# number of items in the DB
NUM_ITEMS = 10000

# Which class has to be called in order to create the DB?
# Derby: request_player.DerbyDB
# H2: request_player.H2DB
DBClass = request_player.H2DB

# In which class are the SQL statements located?
# Derby: request_player.DerbyStatements
# H2: request_player.H2Statements
statementsClass = request_player.H2Statements

# Which JDBC driver has to be used?
# derby: org.apache.derby.jdbc.EmbeddedDriver
# H2: org.h2.Driver
driver = org.h2.Driver

# DB protocol
# derby: jdbc:derby:
# derby in memory: jdbc:derby:memory:
# H2: jdbc:h2:
# H2 in memory: jdbc:h2:mem:
#protocol = jdbc:h2:mem:
protocol = jdbc:h2:mem:

# DB name
# Derby: tpcw_db
# H2: tpcw_db;LOCK_TIMEOUT=10000
dbName = tpcw_db;LOCK_TIMEOUT=10000

# Options to give to the DriverManager when creating the BD
# Derby: ;create=true
# H2: ;create=true;DB_CLOSE_DELAY=-1;LOCK_MODE=0;MULTI_THREADED=1
# H2 note: ;MULTI_THREADED=1 can be added. However it is not stable yet and can lead to some errors
# (indeed we get some rowCount errors, not solved yet)
dbCreateOpts = ;create=true;DB_CLOSE_DELAY=-1;LOCK_MODE=0;MULTI_THREADED=1

# Database isolation level
# TRANSACTION_${VALUE} where ${VALUE} can be:
# READ_UNCOMMITTED, READ_COMMITTED,
# REPEATABLE_READ (not present in H2), SERIALIZABLE
# Not used for H2
isolationLevel = TRANSACTION_READ_UNCOMMITTED

# DB username
props_user = 

# DB password
props_passwd =
